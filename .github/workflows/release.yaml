name: Release

on:
  push:
    tags:
      - "v0.*" # Only build tag with semantic versioning format

jobs:
  analyze-tags:
    name: Analyze Tags
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.gt.outputs.is_current_tag_the_highest }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - name: Get tags
        id: gt
        uses: Dotunj/github-action-analyze-tags@v0.1.0

  build-and-release:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    needs: analyze-tags
    steps:
      # checkout the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # install upx to compress the binary
      - name: Install upx
        run: sudo apt-get install -y upx
      # Install specific version of go
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      # Run goreleaser with command line flag
      - name: Release & Upload Artifcats
        uses: goreleaser/goreleaser-action@v2
        if: needs.analyze-tags.outputs.should-publish == 'false'
        with:
          version: latest
          args: -f .goreleaser.yml release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}

      - name: Release, Upload Artifacts & Publish Binaries to Package Repositories
        uses: goreleaser/goreleaser-action@v2
        if: needs.analyze-tags.outputs.should-publish == 'true' # the output is been evaluated as a string
        with:
          version: latest
          args: -f .publisher.yml release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
